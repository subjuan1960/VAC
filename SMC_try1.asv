clear; clc; close all;

%% Parameters
dt = 0.001;
T = 4;
t = 0:dt:T;
N = numel(t);

% Human dynamics
Mh = 0.1*sin(t) + 1.5;
Dh = 0.05*sin(0.5*t) + 0.1;

% Robot dynamics
Ma = 2;
Da_init = 0.4;

Dmin = 0.05;
Dmax = 100.0;

%% Human velocity profile
freq = 0.5;
amp = 2;  % [m/s]

xhd = amp * sin(2*pi*freq*t);
xhdd = amp * 2*pi * freq * cos(2*pi*freq*t);

%% Prealloc
xd = zeros(1, N);
xdd = zeros(1, N);
fm = zeros(1, N);
fh = zeros(1, N);
fm_filt = zeros(1, N);
xd_filt = zeros(1, N);

D = zeros(1, N);
Dd = zeros(1, N);
S = zeros(1, N);
P = zeros(1, N);
W = zeros(1, N);

%% Controller parameters
ks = 2;
gamma = 0.05;
phi = 0.01;       % boundary layer width
Dd_max = 50;      % max rate of damping change
alpha_f = 0.05;   % filter strength

sat = @(z) max(min(z,1), -1);  % saturation

%% Initial conditions
xd(1) = xhd(1);
xdd(1) = xhdd(1);
D(1) = Da_init;

fh(1) = Mh(1)*xhdd(1) + Dh(1)*xhd(1);
fm(1) = fh(1) - Mh(1)*xdd(1) - Dh(1)*xd(1);
fm_filt(1) = fm(1);
xd_filt(1) = xd(1);

%% Simulation loop
for k = 1:N-1
    % Compute human force
    fh(k) = Mh(k)*xhdd(k) + Dh(k)*xhd(k);

    % Interaction force
    fm(k) = fh(k) - Mh(k)*xdd(k) - Dh(k)*xd(k);

    % Filtered fm and xd
    fm_filt(k) = (1 - alpha_f)*fm_filt(max(k-1,1)) + alpha_f * fm(k);
    xd_filt(k) = (1 - alpha_f)*xd_filt(max(k-1,1)) + alpha_f * xd(k);

    % Power
    P(k) = fm_filt(k) * xhd(k);
    W(k) = W(max(k-1,1)) + P(k) * dt;

    % Sliding surface (only if human doing work)
    if P(k) > 0
        S(k) = fm_filt(k) * xd_filt(k) / (abs(fm_filt(k)) + 1e-6) - gamma * fm_filt(k)^2;
        Dd(k) = -ks * sat(S(k)/phi);
    else
        S(k) = 0;
        Dd(k) = 0;
    end

    % Clamp rate of D change
    Dd(k) = max(min(Dd(k), Dd_max), -Dd_max);
    D(k) = min(max(D(k) + Dd(k)*dt, Dmin), Dmax);

    % Admittance update
    xdd(k+1) = (1/Ma) * (fh(k) - D(k) * xd(k));
    xd(k+1) = xd(k) + xdd(k+1) * dt;
end

%% Plots

% Sliding surface
figure;
subplot(5,1,1);
plot(t, S, 'LineWidth', 1.5);
xlabel('Time [s]'); ylabel('S');
title('Sliding Surface');
grid on;

% Velocity tracking
subplot(5,1,2);
plot(t, xhd, 'r--', t, xd, 'b');
xlabel('Time [s]'); ylabel('Velocity [m/s]');
legend('Human Intent', 'Robot');
title('Velocity Tracking');

% Interaction force
subplot(5,1,3);
plot(t, fm);
xlabel('Time [s]'); ylabel('f_m [N]');
title('Interaction Force');

% Damping adaptation
subplot(5,1,4);
plot(t, D);
xlabel('Time [s]'); ylabel('D [NÂ·s/m]');
title('Adapted Damping');

% Cumulative human work
subplot(5,1,5);
plot(t, W, 'k', 'LineWidth', 1.5);
xlabel('Time [s]'); ylabel('Work [J]');
title('Cumulative Human Work');
grid on;

%%
% Prepare data for export
data = table(...
    t', ...
    xhd', ...       % Human velocity
    xd', ...        % Robot velocity
    fm', ...        % Interaction force
    'VariableNames', {'Time', 'HumanVelocity', 'RobotVelocity', 'InteractionForce'} ...
);

% Save to CSV
writetable(data, 'SMC_VAC_results.csv');